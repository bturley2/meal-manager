{"ast":null,"code":"var _jsxFileName = \"/Users/bturley/Documents/meal-manager/react/src/components/Navbar.js\";\n// import '../style/Navbar.css';\nimport React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 200;\nconst useStyles = makeStyles(theme => ({\n  // closeDrawer: {\n  //   display: 'flex',\n  // },\n  // openDrawer: {\n  //   [theme.breakpoints.up('sm')]: {\n  //     width: drawerWidth,\n  //     flexShrink: 0,\n  //   },\n  // },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  }\n}));\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true\n    };\n  }\n\n  StyleNavbar() {\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return StyleNavbar() // <AppBar position=\"static\">\n    //   <Toolbar>\n    //     <IconButton edge=\"start\">\n    //       <MenuIcon />\n    //     </IconButton>\n    //     <Typography variant=\"h6\">Dashboard</Typography>\n    //   </Toolbar>\n    // </AppBar>\n    ;\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/bturley/Documents/meal-manager/react/src/components/Navbar.js"],"names":["React","AppBar","IconButton","Toolbar","Typography","MenuIcon","makeStyles","useTheme","drawerWidth","useStyles","theme","appBar","breakpoints","up","width","marginLeft","Navbar","Component","constructor","props","state","isOpen","StyleNavbar","classes","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,qBAArC;;AAEA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,EAAE;AACN,KAACD,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,KAAK,EAAG,eAAcN,WAAY,KADN;AAE5BO,MAAAA,UAAU,EAAEP;AAFgB;AADxB;AAV+B,CAAZ,CAAD,CAA5B;;AAkBA,MAAMQ,MAAN,SAAqBhB,KAAK,CAACiB,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEc,OAAO,CAACZ,MAAxB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAAA,+BACE,QAAC,OAAD;AAAA,kCAEE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACEF,WAAW,EADb,CAEE;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAZF;AAcD;;AA1CkC;;AA8CrC,eAAeN,MAAf","sourcesContent":["// import '../style/Navbar.css';\nimport React from \"react\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  // closeDrawer: {\n  //   display: 'flex',\n  // },\n  // openDrawer: {\n  //   [theme.breakpoints.up('sm')]: {\n  //     width: drawerWidth,\n  //     flexShrink: 0,\n  //   },\n  // },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n}));\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: true,\n    };\n  }\n\n  StyleNavbar() {\n    const classes = useStyles();\n    return (\n      <div className={classes.appBar}>\n        <AppBar position=\"static\">\n          <Toolbar>\n  \n            <IconButton edge=\"start\">\n              <MenuIcon />\n            </IconButton>\n  \n            <Typography variant=\"h6\">Dashboard</Typography>\n  \n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      StyleNavbar()\n      // <AppBar position=\"static\">\n      //   <Toolbar>\n\n      //     <IconButton edge=\"start\">\n      //       <MenuIcon />\n      //     </IconButton>\n\n      //     <Typography variant=\"h6\">Dashboard</Typography>\n\n      //   </Toolbar>\n      // </AppBar>\n    );\n  }\n}\n\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}